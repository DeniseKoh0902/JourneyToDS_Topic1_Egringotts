/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Currency;

import Bank.Account;
import Bank.UserHomePage;
import Bank.Wand;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

import java.sql.*;
import javax.swing.JComboBox;
import javax.swing.table.DefaultTableModel;

public class ExchangePage extends javax.swing.JFrame {
    private String loggedInUserID;
    private Account user;       // User account details
    private UserBal userBal;    // User's balance details
    private String currencyName, rateToGalleon, processingFeeRate;
    DefaultTableModel model;

    /**
     * Creates new form ExchangePage
     */
    public ExchangePage() {
        setTitle("Currency Exchange Page");
        initComponents();
        displayCurrency();
        fillCombo(fromCurrency);
        fillCombo(toCurrency);
    }

    public ExchangePage(Account user) {
        setTitle("Currency Exchange Page");
        this.user = user;
        this.loggedInUserID = user.getUserID();
        this.userBal = getUserBalances(loggedInUserID);
        initComponents();
        displayCurrency();
        Wand.setCustomIcon(this);
        Wand.setCustomCursor(this);
        fillCombo(fromCurrency);
        fillCombo(toCurrency);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lbl_from = new javax.swing.JLabel();
        txtfield_exchangeAmount = new javax.swing.JTextField();
        lbl_to = new javax.swing.JLabel();
        lbl_choose = new javax.swing.JLabel();
        lbl_enter = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        toCurrency = new javax.swing.JComboBox<>();
        fromCurrency = new javax.swing.JComboBox<>();
        lbl_currentBal = new javax.swing.JLabel();
        btn_cancel = new java.awt.Button();
        btn_checkDetails = new java.awt.Button();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_currency = new rojeru_san.complementos.RSTableMetro();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1070, 600));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0, 120));

        title.setFont(new java.awt.Font("Castellar", 1, 30)); // NOI18N
        title.setForeground(new java.awt.Color(255, 255, 255));
        title.setText("E-gringotts Currency Converter");

        jLabel2.setFont(new java.awt.Font("MS Mincho", 0, 20)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Unveil the Mysteries of Wizarding Wealth!");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addComponent(title)
                .addGap(20, 20, 20))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(143, 143, 143)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(180, 20, 730, 110);

        jPanel2.setBackground(new java.awt.Color(0, 0, 0, 150));

        lbl_from.setBackground(new java.awt.Color(255, 255, 255));
        lbl_from.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        lbl_from.setForeground(new java.awt.Color(255, 204, 204));
        lbl_from.setText("FROM :");

        txtfield_exchangeAmount.setFont(new java.awt.Font("NSimSun", 0, 16)); // NOI18N
        txtfield_exchangeAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfield_exchangeAmountActionPerformed(evt);
            }
        });

        lbl_to.setBackground(new java.awt.Color(255, 255, 255));
        lbl_to.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        lbl_to.setForeground(new java.awt.Color(204, 255, 255));
        lbl_to.setText("TO      :");

        lbl_choose.setBackground(new java.awt.Color(255, 255, 255));
        lbl_choose.setFont(new java.awt.Font("NSimSun", 1, 18)); // NOI18N
        lbl_choose.setForeground(new java.awt.Color(255, 255, 255));
        lbl_choose.setText("Choose your desired currency:");

        lbl_enter.setBackground(new java.awt.Color(255, 255, 255));
        lbl_enter.setFont(new java.awt.Font("NSimSun", 1, 18)); // NOI18N
        lbl_enter.setForeground(new java.awt.Color(255, 255, 255));
        lbl_enter.setText("Enter amount to exchange:");

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Your current balance is ");

        toCurrency.setFont(new java.awt.Font("NSimSun", 0, 14)); // NOI18N
        toCurrency.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toCurrencyActionPerformed(evt);
            }
        });

        fromCurrency.setFont(new java.awt.Font("NSimSun", 0, 14)); // NOI18N
        fromCurrency.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fromCurrencyActionPerformed(evt);
            }
        });

        lbl_currentBal.setFont(new java.awt.Font("Nirmala UI", 0, 11)); // NOI18N
        lbl_currentBal.setForeground(new java.awt.Color(255, 255, 255));
        lbl_currentBal.setToolTipText("");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl_currentBal, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lbl_enter, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(lbl_to, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(toCurrency, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(lbl_from, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fromCurrency, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lbl_choose, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtfield_exchangeAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(lbl_choose)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_from)
                    .addComponent(fromCurrency, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_to)
                    .addComponent(toCurrency, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(lbl_enter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtfield_exchangeAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(lbl_currentBal))
                .addGap(40, 40, 40))
        );

        getContentPane().add(jPanel2);
        jPanel2.setBounds(620, 150, 400, 320);

        btn_cancel.setBackground(new java.awt.Color(255, 255, 255));
        btn_cancel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_cancel.setLabel("Cancel");
        btn_cancel.setName(""); // NOI18N
        btn_cancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_cancelMouseClicked(evt);
            }
        });
        btn_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelActionPerformed(evt);
            }
        });
        getContentPane().add(btn_cancel);
        btn_cancel.setBounds(40, 490, 80, 30);

        btn_checkDetails.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_checkDetails.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        btn_checkDetails.setLabel("Check Details");
        btn_checkDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_checkDetailsActionPerformed(evt);
            }
        });
        getContentPane().add(btn_checkDetails);
        btn_checkDetails.setBounds(740, 490, 190, 40);

        table_currency.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Currency Name", "Exchange Rate", "Processing Fee"
            }
        ));
        table_currency.setColorBackgoundHead(new java.awt.Color(102, 51, 0));
        table_currency.setColorBordeFilas(new java.awt.Color(153, 51, 0));
        table_currency.setColorBordeHead(new java.awt.Color(255, 255, 255));
        table_currency.setColorFilasBackgound2(new java.awt.Color(255, 255, 255));
        table_currency.setColorFilasForeground1(new java.awt.Color(153, 0, 0));
        table_currency.setColorFilasForeground2(new java.awt.Color(153, 0, 0));
        table_currency.setColorSelBackgound(new java.awt.Color(255, 255, 204));
        table_currency.setColorSelForeground(new java.awt.Color(153, 0, 0));
        table_currency.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        table_currency.setFuenteFilas(new java.awt.Font("Segoe Print", 0, 18)); // NOI18N
        table_currency.setFuenteFilasSelect(new java.awt.Font("Segoe Print", 0, 18)); // NOI18N
        table_currency.setFuenteHead(new java.awt.Font("Lucida Handwriting", 1, 14)); // NOI18N
        table_currency.setRowHeight(30);
        jScrollPane1.setViewportView(table_currency);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(30, 180, 540, 290);

        jPanel3.setBackground(new java.awt.Color(0, 0, 0, 120));

        jLabel3.setFont(new java.awt.Font("Lucida Calligraphy", 1, 22)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Available Magical Currencies");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(73, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 12, Short.MAX_VALUE)
                .addComponent(jLabel3))
        );

        getContentPane().add(jPanel3);
        jPanel3.setBounds(30, 140, 540, 40);

        background.setBackground(new java.awt.Color(204, 204, 204));
        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/exchange.jpg"))); // NOI18N
        getContentPane().add(background);
        background.setBounds(0, 0, 1070, 600);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

//    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed

//    }//GEN-LAST:event_cancelActionPerformed

    
    private void btn_checkDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_checkDetailsActionPerformed
        // Get the currencies and amount entered by the user
        String amountText = txtfield_exchangeAmount.getText();
        String sourceCurrency = fromCurrency.getSelectedItem().toString();
        String targetCurrency = toCurrency.getSelectedItem().toString();

        if (amountText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter the amount you want to exchange.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            double initialAmount = Double.parseDouble(amountText);
            // Check if source and target currencies are the same
            if (sourceCurrency.equals(targetCurrency)) {
                JOptionPane.showMessageDialog(this, "Source and target currencies are the same.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Check if userBal is null
            if (userBal == null) {
                JOptionPane.showMessageDialog(this, "Error: Failed to retrieve user balances.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Get the current balance
            double sourceBal = userBal.getBalance(sourceCurrency);

            // Check if the amount exceeds the current balance
            if (initialAmount > sourceBal) {
                JOptionPane.showMessageDialog(this, "Error: Insufficient balance.", "Error", JOptionPane.ERROR_MESSAGE);
                txtfield_exchangeAmount.setText("");
            } else {
                try {
                    Class.forName("com.mysql.cj.jdbc.Driver");
                    Connection con = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/Egringotts", "root", "password");
                    Statement stm = con.createStatement();
                    ResultSet rs = stm.executeQuery("select CurrencyName from Currency");
                    CurrencyGraphConstructor graph = new CurrencyGraphConstructor();
                    graph.constructCurrencyGraph(con);

                    System.out.println("Currency Graph build successful.");
                    con.close();

                    // construct currency converter with the current currency graph
                    CurrencyConverter currencyConverter = new CurrencyConverter(graph);
                    ExchangeTransaction details = currencyConverter.convertCurrency(sourceCurrency, targetCurrency, initialAmount);
                    System.out.println("\nCurrency Converter build successful.");

                    //debug use
                    System.out.println("From: " + details.getSourceCurrency());
                    System.out.println("To: " + details.getTargetCurrency());
                    System.out.println("Initial Amount: " + details.getInitialAmount());
                    System.out.println("Amount After Conversion: " + details.getConvertedAmount());
                    System.out.println("Processing Fee: " + details.getProcessingFee());
                    System.out.println("Total Amount to Pay: " + details.getTotalAmountPaid());
                    
                    // Check if total amount paid exceeds source balance
                    if (details.getTotalAmountPaid() > sourceBal) {
                        JOptionPane.showMessageDialog(this, "Error: Insufficient balance for payment (including processing fee)!", "Error", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                    
                    // Check if converted amount is equal to zero
                    if (details.getConvertedAmount() == 0.00) {
                        JOptionPane.showMessageDialog(this, "Attention: Your intended conversion yields an amount so minute that it equals naught in our magical realm. "
                                + "Please ensure the amount holds significant value before proceeding.", "Zero Converted Amount!", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                    
                    //Next page : Show currency exchange details tp the user
                    ExchangeDetails review = new ExchangeDetails(details, user);
                    review.setVisible(true);
                    review.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                    this.dispose();

                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        } catch (NumberFormatException e) {
            // handle invalid amount entered
            JOptionPane.showMessageDialog(this, "Please enter a valid amount that you want to exchange.", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btn_checkDetailsActionPerformed

    private void txtfield_exchangeAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfield_exchangeAmountActionPerformed

    }//GEN-LAST:event_txtfield_exchangeAmountActionPerformed

    private void btn_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelActionPerformed
        UserHomePage userHomePage = new UserHomePage(user);
        userHomePage.setUser();
        userHomePage.setUserTypes();
        userHomePage.setVisible(true);
        userHomePage.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_btn_cancelActionPerformed

     
    //fecth the current balance of the selected source currency of the user to be display
    private void fromCurrencyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fromCurrencyActionPerformed
        String selectedFromCurrency = fromCurrency.getSelectedItem().toString();
        double sourceBal = userBal.getBalance(selectedFromCurrency);
        String currentBal = String.format("%.2f", sourceBal);
        lbl_currentBal.setText(currentBal + " " + selectedFromCurrency);
    }//GEN-LAST:event_fromCurrencyActionPerformed

    private void toCurrencyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toCurrencyActionPerformed

    }//GEN-LAST:event_toCurrencyActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        
    }//GEN-LAST:event_formWindowOpened

    private void btn_cancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_cancelMouseClicked

    }//GEN-LAST:event_btn_cancelMouseClicked

    // Method to get user balances from the database
    public UserBal getUserBalances(String userID) {
        UserBal userBal = new UserBal(userID);
        Connection connection = null;
        PreparedStatement statement = null;
        ResultSet resultSet = null;

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            connection = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/Egringotts", "root", "password");

            String query = "SELECT * FROM userbalance WHERE UserID = ?";
            statement = connection.prepareStatement(query);
            statement.setString(1, userID);

            resultSet = statement.executeQuery();

            if (resultSet.next()) {
                // get all the currency balances and store in UserBal
                ResultSetMetaData metaData = resultSet.getMetaData();
                int columnCount = metaData.getColumnCount();
                for (int i = 2; i <= columnCount; i++) { // start from column 2 as column 1 is UserID
                    String currencyName = metaData.getColumnName(i);
                    double balance = resultSet.getDouble(i);
                    userBal.setBalance(currencyName, balance);
                }
            } else {
                userBal = new UserBal(userID);
            }

        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            //close the connection
            try {
                if (resultSet != null) {
                    resultSet.close();
                }
                if (statement != null) {
                    statement.close();
                }
                if (connection != null) {
                    connection.close();
                }
            } catch (SQLException e) {
                System.out.println("Error closing resources: " + e.getMessage());
            }
        }

        return userBal;
    }

    //display currency details in the table
    public void displayCurrency() {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/Egringotts", "root", "password");
            Statement stm = con.createStatement();

            ResultSet rs = stm.executeQuery("SELECT * FROM Currency");
            while (rs.next()) {
                currencyName = rs.getString("CurrencyName");
                rateToGalleon = rs.getString("RateToGalleon");
                processingFeeRate = rs.getString("ProcessingFeeRate");

                Object[] obj = {currencyName, rateToGalleon, processingFeeRate};
                model = (DefaultTableModel) table_currency.getModel();
                model.addRow(obj);
            }
            con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    //fetch the available currencies from database to be display in the drop down list (jCombo Box)
    public void fillCombo(JComboBox currency) {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/Egringotts", "root", "password");
            Statement stm = con.createStatement();
            ResultSet rs = stm.executeQuery("select CurrencyName from Currency");
            while (rs.next()) {
                String currencyName = rs.getString("CurrencyName");
                currency.addItem(currencyName);
            }
            con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExchangePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExchangePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExchangePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExchangePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExchangePage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private java.awt.Button btn_cancel;
    private java.awt.Button btn_checkDetails;
    private javax.swing.JComboBox<String> fromCurrency;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_choose;
    private javax.swing.JLabel lbl_currentBal;
    private javax.swing.JLabel lbl_enter;
    private javax.swing.JLabel lbl_from;
    private javax.swing.JLabel lbl_to;
    private rojeru_san.complementos.RSTableMetro table_currency;
    private javax.swing.JLabel title;
    private javax.swing.JComboBox<String> toCurrency;
    private javax.swing.JTextField txtfield_exchangeAmount;
    // End of variables declaration//GEN-END:variables
}

class Item {

    String currencyName;

    private Item(String currencyName) {
        this.currencyName = currencyName;
    }

    public String getCurrencyName() {
        return currencyName;
    }

}
