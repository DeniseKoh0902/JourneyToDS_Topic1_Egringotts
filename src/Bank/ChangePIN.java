/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Bank;

import Admin.AdminProfile;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author USER
 */
public class ChangePIN extends javax.swing.JFrame {
    private Account user;
    /**
     * Creates new form ChangePIN
     */
    public ChangePIN() {
        setTitle("Change PIN");
        initComponents();
    }

    /**
     * Creates new form ChangePIN with user details
     * 
     * @param user The account object representing the user
     */ 
    public ChangePIN(Account user) {
        setTitle("Change PIN");
        this.user=user;
        initComponents();
        Wand.setCustomIcon(this);
        Wand.setCustomCursor(this);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        changePINTitle = new javax.swing.JLabel();
        oldPINLabel = new javax.swing.JLabel();
        newPINLabel = new javax.swing.JLabel();
        confirmPINLabel = new javax.swing.JLabel();
        oldPINField = new javax.swing.JTextField();
        confirmPINFIeld = new javax.swing.JTextField();
        newPINField = new javax.swing.JTextField();
        back = new javax.swing.JButton();
        done = new javax.swing.JButton();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(600, 400));
        getContentPane().setLayout(null);

        changePINTitle.setFont(new java.awt.Font("Calibri", 1, 45)); // NOI18N
        changePINTitle.setForeground(new java.awt.Color(255, 255, 255));
        changePINTitle.setText("Change PIN");
        getContentPane().add(changePINTitle);
        changePINTitle.setBounds(40, 40, 340, 50);

        oldPINLabel.setBackground(new java.awt.Color(255, 255, 255));
        oldPINLabel.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        oldPINLabel.setForeground(new java.awt.Color(255, 255, 255));
        oldPINLabel.setText("Enter old PIN");
        getContentPane().add(oldPINLabel);
        oldPINLabel.setBounds(50, 120, 160, 20);

        newPINLabel.setBackground(new java.awt.Color(255, 255, 255));
        newPINLabel.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        newPINLabel.setForeground(new java.awt.Color(255, 255, 255));
        newPINLabel.setText("Enter new PIN");
        getContentPane().add(newPINLabel);
        newPINLabel.setBounds(50, 180, 160, 20);

        confirmPINLabel.setBackground(new java.awt.Color(255, 255, 255));
        confirmPINLabel.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        confirmPINLabel.setForeground(new java.awt.Color(255, 255, 255));
        confirmPINLabel.setText("Confirm new PIN");
        getContentPane().add(confirmPINLabel);
        confirmPINLabel.setBounds(50, 240, 160, 20);

        oldPINField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        oldPINField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oldPINFieldActionPerformed(evt);
            }
        });
        getContentPane().add(oldPINField);
        oldPINField.setBounds(230, 110, 170, 30);

        confirmPINFIeld.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        getContentPane().add(confirmPINFIeld);
        confirmPINFIeld.setBounds(230, 230, 170, 30);

        newPINField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        getContentPane().add(newPINField);
        newPINField.setBounds(230, 170, 170, 30);

        back.setText("Back");
        back.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        getContentPane().add(back);
        back.setBounds(380, 290, 80, 30);

        done.setText("Done");
        done.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        done.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneActionPerformed(evt);
            }
        });
        getContentPane().add(done);
        done.setBounds(490, 290, 80, 30);

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/changePIN.jpg"))); // NOI18N
        getContentPane().add(background);
        background.setBounds(0, 0, 600, 401);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void oldPINFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oldPINFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_oldPINFieldActionPerformed

     /**
     * Handles the action event for the back button click
     * 
     * @param evt The action event
     */
    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        String userType = user.getUser().getUserType();
        if(userType.equals("Goblin")){
            // Navigate to AdminProfile if user is an admin
            AdminProfile adminProfile=new AdminProfile(user);
            adminProfile.setUser(); 
            adminProfile.setUserType(userType);
            adminProfile.setVisible(true);
            adminProfile.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            this.dispose();
        }else{
            // Navigate to UserProfile if user is not an admin
            UserProfile userProfile = new UserProfile(user);
            userProfile.setUser(); 
            userProfile.setUserType(userType);
            userProfile.setVisible(true);
            userProfile.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            this.dispose();
        }
    }//GEN-LAST:event_backActionPerformed
  
    /**
     * Handles the action event for the done button click
     * 
     * @param evt The action event
     */
    private void doneActionPerformed(java.awt.event.ActionEvent evt){
        String Userid, NewPIN, selectquery, updatequery;
        int notFound = 0;
        
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection connection = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/Egringotts", "root", "password");
            Statement statement = connection.createStatement();
            NewPIN=newPINField.getText();
            
            // Validate input fields and display appropriate error messages
            if ("".equals(oldPINField.getText())) {
                JOptionPane.showMessageDialog(new JFrame(), "Old PIN is required!", "Error", JOptionPane.ERROR_MESSAGE);
            } else if ("".equals(NewPIN)) {
                JOptionPane.showMessageDialog(new JFrame(), "New PIN is required!", "Error", JOptionPane.ERROR_MESSAGE);
            } else if ("".equals(confirmPINFIeld.getText())) {
                JOptionPane.showMessageDialog(new JFrame(), "Please confirm your new PIN!", "Error", JOptionPane.ERROR_MESSAGE);
            }else if(!NewPIN.equals(confirmPINFIeld.getText())){
                JOptionPane.showMessageDialog(new JFrame(), "Please confirm your new PIN!", "Error", JOptionPane.ERROR_MESSAGE);
            }else if(!oldPINField.getText().equals(user.getPIN())){
                JOptionPane.showMessageDialog(new JFrame(), "Wrong old PIN!", "Error", JOptionPane.ERROR_MESSAGE);
                // Validate PIN format
            }else if (NewPIN.length() != 6 || !NewPIN.matches("\\d{6}")) {
                JOptionPane.showMessageDialog(new JFrame(), "Invalid PIN!", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                // If validation passes, update the PIN
                Userid = user.getUserID();
                user.setPIN(NewPIN);
                selectquery = "SELECT * FROM Account WHERE UserID= ?";
                updatequery = "UPDATE Account SET PIN=? WHERE UserID=?";

                PreparedStatement selectStatement = connection.prepareStatement(selectquery);
                selectStatement.setString(1, Userid);
                ResultSet resultset = selectStatement.executeQuery();

                while (resultset.next()) {
                    notFound = 1;

                    if (notFound == 1 ) {
                        PreparedStatement updateStatement = connection.prepareStatement(updatequery);
                        updateStatement.setString(1, NewPIN);
                        updateStatement.setString(2, Userid);
                        updateStatement.executeUpdate();
                        JOptionPane.showMessageDialog(new JFrame(), "PIN Changed Successfully!");
                        
                        // Navigate to the appropriate profile based on user type
                        String userType = user.getUser().getUserType();
                        if(userType.equals("Goblin")){
                            AdminProfile adminProfile=new AdminProfile(user);
                            adminProfile.setUser(); 
                            adminProfile.setUserType(userType);
                            adminProfile.setVisible(true);
                            adminProfile.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                            this.dispose();
                        }else{
                            UserProfile userProfile = new UserProfile(user);
                            userProfile.setUser(); 
                            userProfile.setUserType(userType);
                            userProfile.setVisible(true);
                            userProfile.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                            this.dispose();
                        }
                    } else {
                        JOptionPane.showMessageDialog(new JFrame(), "Invalid old PIN", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
                if (notFound == 0) {
                    JOptionPane.showMessageDialog(new JFrame(), "User not found!", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (Exception e) {
            System.out.println("Error!" + e.getMessage());

        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChangePIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChangePIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChangePIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChangePIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChangePIN().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JLabel background;
    private javax.swing.JLabel changePINTitle;
    private javax.swing.JTextField confirmPINFIeld;
    private javax.swing.JLabel confirmPINLabel;
    private javax.swing.JButton done;
    private javax.swing.JTextField newPINField;
    private javax.swing.JLabel newPINLabel;
    private javax.swing.JTextField oldPINField;
    private javax.swing.JLabel oldPINLabel;
    // End of variables declaration//GEN-END:variables
}
