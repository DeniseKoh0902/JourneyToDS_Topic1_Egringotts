/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Bank;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

/**
 *
 * @author USER
 */
public class TransferLimit extends javax.swing.JFrame {

    private Account user;

    /**
     * Creates new form TransferLimit
     */
    public TransferLimit() {
        setTitle("Transfer Limit");
        initComponents();
    }

    /**
     * Creates new form TransferLimit with the specified user. Sets the title,
     * initializes components, customizes the window, sets the default close
     * operation, retrieves the transfer limit, and adds a window listener to
     * update the transfer limit on close.
     *
     * @param user The user account associated with this TransferLimit window.
     */
    public TransferLimit(Account user) {
        setTitle("Transfer Limit");
        this.user = user;
        initComponents();
        setTransferLimit();
        Wand.setCustomIcon(this);
        Wand.setCustomCursor(this);
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        getTransferLimit();//get the transfer limit
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                updateTransferLimit();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        adjustWord = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(600, 200));
        getContentPane().setLayout(null);

        adjustWord.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        adjustWord.setForeground(new java.awt.Color(255, 255, 255));
        adjustWord.setText("Adjust your card transfer limit per day here");
        adjustWord.setToolTipText("");
        getContentPane().add(adjustWord);
        adjustWord.setBounds(40, 10, 510, 30);

        jComboBox1.setBackground(new java.awt.Color(204, 204, 204));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "100 Sickle", "200 Sickle", "300 Sickle", "400 Sickle", "500 Sickle" }));
        getContentPane().add(jComboBox1);
        jComboBox1.setBounds(240, 60, 130, 30);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(226, 211, 211));
        jLabel1.setText("per Day");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(380, 60, 130, 25);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(226, 211, 211));
        jLabel2.setText("Transfer Limit");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(110, 60, 130, 25);

        background.setForeground(new java.awt.Color(255, 255, 255));
        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/limit.jpg"))); // NOI18N
        getContentPane().add(background);
        background.setBounds(0, 0, 600, 200);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Retrieves the selected transfer limit from the JComboBox and sets it in
     * the user's debit card. Assumes jComboBox1 is a JComboBox instance.
     */
    public void getTransferLimit() {
        // Assuming jComboBox1 is your JComboBox instance
        String selectedString = jComboBox1.getSelectedItem().toString();
        int spaceIndex = selectedString.indexOf(" ");
        int selectedItem = Integer.parseInt(selectedString.substring(0, spaceIndex));
        user.getDebitCard().setTransferlimit(selectedItem);

    }

    public void setTransferLimit() {
        int limit = 0;
        int transferLimit = user.getDebitCard().getTransferlimit();
        switch (transferLimit) {
            case 500:
                limit = 4;
                break;
            case 400:
                limit = 3;
                break;
            case 300:
                limit = 2;
                break;
            case 200:
                limit = 1;
                break;
            case 100:
                limit = 0;
                break;
            default:
                // handle other cases
                break;
        }
        jComboBox1.setSelectedIndex(limit);
    }



/**
 * Updates the transfer limit for the user's debit card in the database.
 * Retrieves the selected transfer limit from the JComboBox, updates the user
 * object, and updates the database accordingly.
 */
private void updateTransferLimit() {
        // Get the transfer limit from the JComboBox
        String selectedString = jComboBox1.getSelectedItem().toString();
        int spaceIndex = selectedString.indexOf(" ");
        int selectedItem = Integer.parseInt(selectedString.substring(0, spaceIndex));
        user.getDebitCard().setTransferlimit(selectedItem);

        // Update the transfer limit in the database
        // Variables for database operations
        String Userid, transferlimit, selectquery, updatequery;
        int notFound = 0;

        try {
            // Load the MySQL JDBC driver
            Class.forName("com.mysql.cj.jdbc.Driver");
            // Establish a connection to the database
            Connection connection = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/Egringotts", "root", "password");

            // Prepare the queries
            Userid = user.getUserID();
            transferlimit = String.valueOf(user.getDebitCard().getTransferlimit());
            selectquery = "SELECT * FROM Account WHERE UserID= ?";
            updatequery = "UPDATE Account SET CardTransferLimit=? WHERE UserID=?";

            // Execute the select query
            PreparedStatement selectStatement = connection.prepareStatement(selectquery);
            selectStatement.setString(1, Userid);
            ResultSet resultset = selectStatement.executeQuery();

            while (resultset.next()) {
                notFound = 1;

                if (notFound == 1) {
                    // Execute the update query if user is found
                    PreparedStatement updateStatement = connection.prepareStatement(updatequery);
                    updateStatement.setString(1, transferlimit);
                    updateStatement.setString(2, Userid);
                    updateStatement.executeUpdate();
                    updateStatement.close();
                    JOptionPane.showMessageDialog(new JFrame(), "Card Transfer Limit Changed Successfully!");
                    
                } else {
                    // Display an error message if the transfer limit is invalid
                    JOptionPane.showMessageDialog(new JFrame(), "Invalid transfer limit", "Error", JOptionPane.ERROR_MESSAGE);
                }

                if (notFound == 0) {
                    // Display an error message if the user is not found
                    JOptionPane.showMessageDialog(new JFrame(), "User not found!", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (Exception e) {
            // Print any errors that occur
            System.out.println("Error!" + e.getMessage());
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TransferLimit

.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TransferLimit

.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TransferLimit

.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TransferLimit

.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TransferLimit().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel adjustWord;
    private javax.swing.JLabel background;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
