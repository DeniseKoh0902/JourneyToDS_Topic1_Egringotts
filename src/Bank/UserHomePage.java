/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Bank;

import Admin.AdminProfile;
import Admin.OwlPostHelp;
import Transfer.Search;
import Currency.ExchangePage;
import Currency.ShowAccountBalance;
import javax.swing.JFrame;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import javax.swing.JOptionPane;

public class UserHomePage extends javax.swing.JFrame {

    private String loggedInUserID;// ID of the logged-in user
    private String imagePathString;// Path to the user's profile image
    private Account user;// User account information

    /**
     * Creates new form HomePage
     */
    public UserHomePage() {
        setTitle("Home Page");
        initComponents();
    }

    /**
     * Creates new form HomePage with a user account parameter
     *
     * @param user The user account information
     */
    public UserHomePage(Account user) {
        setTitle("Home Page");
        this.user = user;
        initComponents();
        displayBalances(user.getUserID());// Display user balances
        Wand.setCustomIcon(this);// Set custom icon
        Wand.setCustomCursor(this);// Set custom cursor
        panelMouseEffect.registerMouseEffect();// Register mouse effects
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelMouseEffect = new Bank.PanelMouseEffect();
        top = new javax.swing.JPanel();
        name = new java.awt.Label();
        logo = new javax.swing.JLabel();
        signOut = new java.awt.Button();
        totalBalanceBackground = new javax.swing.JPanel();
        balance = new javax.swing.JLabel();
        knut = new javax.swing.JLabel();
        sickle = new javax.swing.JLabel();
        galleon = new javax.swing.JLabel();
        knutMoney = new javax.swing.JLabel();
        galleonMoney = new javax.swing.JLabel();
        sickleMoney = new javax.swing.JLabel();
        javax.swing.JButton btn_showCurrency = new javax.swing.JButton();
        bottom = new javax.swing.JPanel();
        Home = new java.awt.Button();
        Profile = new java.awt.Button();
        javax.swing.JButton transfer = new javax.swing.JButton();
        history = new javax.swing.JButton();
        exchange = new javax.swing.JButton();
        Card = new javax.swing.JPanel();
        profilePic = new javax.swing.JLabel();
        nameOfUser = new javax.swing.JLabel();
        cardNumber = new javax.swing.JLabel();
        transferLimitButton = new java.awt.Button();
        transferLimit = new javax.swing.JLabel();
        userTypes = new java.awt.Label();
        virtualCard = new java.awt.Button();
        userIDLabel = new javax.swing.JLabel();
        btn_aichatsupport = new javax.swing.JButton();
        btn_todayAnnouncement = new javax.swing.JButton();
        javax.swing.JLabel background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1070, 600));
        getContentPane().setLayout(null);

        top.setBackground(new java.awt.Color(61, 69, 82));

        name.setFont(new java.awt.Font("Castellar", 1, 48)); // NOI18N
        name.setForeground(new java.awt.Color(255, 255, 255));
        name.setText("E-Gringotts");

        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/logo100x100.png"))); // NOI18N

        signOut.setBackground(new java.awt.Color(101, 108, 120));
        signOut.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        signOut.setLabel("Sign Out");
        signOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout topLayout = new javax.swing.GroupLayout(top);
        top.setLayout(topLayout);
        topLayout.setHorizontalGroup(
            topLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topLayout.createSequentialGroup()
                .addComponent(logo)
                .addGap(23, 23, 23)
                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 518, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 261, Short.MAX_VALUE)
                .addComponent(signOut, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );
        topLayout.setVerticalGroup(
            topLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, topLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(topLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(logo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, topLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(signOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        panelMouseEffect.add(top);
        top.setBounds(0, 0, 1070, 100);

        totalBalanceBackground.setBackground(new java.awt.Color(0, 0, 0, 150));
        totalBalanceBackground.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        balance.setFont(new java.awt.Font("Perpetua", 1, 40)); // NOI18N
        balance.setForeground(new java.awt.Color(255, 255, 255));
        balance.setText("Total Balance");

        knut.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        knut.setForeground(new java.awt.Color(147, 214, 234));
        knut.setText("Knut");

        sickle.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        sickle.setForeground(new java.awt.Color(147, 214, 234));
        sickle.setText("Sickle");

        galleon.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        galleon.setForeground(new java.awt.Color(147, 214, 234));
        galleon.setText("Galleon");

        knutMoney.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        knutMoney.setForeground(new java.awt.Color(185, 166, 209));
        knutMoney.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        knutMoney.setText("0.00");

        galleonMoney.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        galleonMoney.setForeground(new java.awt.Color(185, 166, 209));
        galleonMoney.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        galleonMoney.setText("0.00");

        sickleMoney.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        sickleMoney.setForeground(new java.awt.Color(185, 166, 209));
        sickleMoney.setText("0.00");

        btn_showCurrency.setBackground(new java.awt.Color(58, 68, 75));
        btn_showCurrency.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        btn_showCurrency.setForeground(new java.awt.Color(255, 255, 255));
        btn_showCurrency.setText("Show more currency");
        btn_showCurrency.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_showCurrency.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_showCurrencyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout totalBalanceBackgroundLayout = new javax.swing.GroupLayout(totalBalanceBackground);
        totalBalanceBackground.setLayout(totalBalanceBackgroundLayout);
        totalBalanceBackgroundLayout.setHorizontalGroup(
            totalBalanceBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(totalBalanceBackgroundLayout.createSequentialGroup()
                .addContainerGap(62, Short.MAX_VALUE)
                .addGroup(totalBalanceBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, totalBalanceBackgroundLayout.createSequentialGroup()
                        .addGroup(totalBalanceBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(totalBalanceBackgroundLayout.createSequentialGroup()
                                .addGroup(totalBalanceBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(sickleMoney)
                                    .addComponent(galleonMoney)
                                    .addComponent(knutMoney))
                                .addGap(39, 39, 39)
                                .addGroup(totalBalanceBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(sickle, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(knut, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(galleon)))
                            .addComponent(btn_showCurrency))
                        .addGap(67, 67, 67))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, totalBalanceBackgroundLayout.createSequentialGroup()
                        .addComponent(balance, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59))))
        );
        totalBalanceBackgroundLayout.setVerticalGroup(
            totalBalanceBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(totalBalanceBackgroundLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(balance, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(totalBalanceBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(knut, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(knutMoney, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(totalBalanceBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sickle, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sickleMoney, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(totalBalanceBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(galleon, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(galleonMoney, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btn_showCurrency, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        panelMouseEffect.add(totalBalanceBackground);
        totalBalanceBackground.setBounds(60, 130, 360, 370);

        bottom.setBackground(new java.awt.Color(76, 80, 88));

        Home.setBackground(new java.awt.Color(80, 80, 89));
        Home.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Home.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        Home.setLabel("Home");
        Home.setPreferredSize(new java.awt.Dimension(55, 25));
        Home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HomeActionPerformed(evt);
            }
        });

        Profile.setBackground(new java.awt.Color(80, 80, 89));
        Profile.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Profile.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        Profile.setLabel("Me");
        Profile.setPreferredSize(new java.awt.Dimension(55, 25));
        Profile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProfileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bottomLayout = new javax.swing.GroupLayout(bottom);
        bottom.setLayout(bottomLayout);
        bottomLayout.setHorizontalGroup(
            bottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bottomLayout.createSequentialGroup()
                .addComponent(Home, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(Profile, javax.swing.GroupLayout.DEFAULT_SIZE, 534, Short.MAX_VALUE))
        );
        bottomLayout.setVerticalGroup(
            bottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bottomLayout.createSequentialGroup()
                .addComponent(Profile, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(bottomLayout.createSequentialGroup()
                .addComponent(Home, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        panelMouseEffect.add(bottom);
        bottom.setBounds(0, 520, 1070, 80);

        transfer.setBackground(new java.awt.Color(58, 68, 75));
        transfer.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        transfer.setForeground(new java.awt.Color(255, 255, 255));
        transfer.setText("Portkey Pay");
        transfer.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        transfer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transferActionPerformed(evt);
            }
        });
        panelMouseEffect.add(transfer);
        transfer.setBounds(460, 340, 170, 70);

        history.setBackground(new java.awt.Color(57, 67, 73));
        history.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        history.setForeground(new java.awt.Color(255, 255, 255));
        history.setText("Pensieve Past");
        history.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        history.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                historyActionPerformed(evt);
            }
        });
        panelMouseEffect.add(history);
        history.setBounds(650, 340, 170, 70);

        exchange.setBackground(new java.awt.Color(56, 65, 71));
        exchange.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        exchange.setForeground(new java.awt.Color(255, 255, 255));
        exchange.setText("Exchangeus");
        exchange.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exchange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exchangeActionPerformed(evt);
            }
        });
        panelMouseEffect.add(exchange);
        exchange.setBounds(840, 340, 170, 70);

        Card.setBackground(new java.awt.Color(255, 255, 255));
        Card.setLayout(null);

        profilePic.setBackground(new java.awt.Color(102, 255, 255));
        profilePic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/profilePic.jpg"))); // NOI18N
        Card.add(profilePic);
        profilePic.setBounds(20, 10, 100, 100);

        nameOfUser.setFont(new java.awt.Font("Calibri", 1, 28)); // NOI18N
        nameOfUser.setText("Harry Potter");
        Card.add(nameOfUser);
        nameOfUser.setBounds(130, 20, 210, 30);

        cardNumber.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        Card card = new Card();
        cardNumber.setText(String.valueOf(card.getCardNum()));
        Card.add(cardNumber);
        cardNumber.setBounds(130, 140, 380, 40);

        transferLimitButton.setBackground(new java.awt.Color(255, 255, 255));
        transferLimitButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        transferLimitButton.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        transferLimitButton.setLabel("here");
        transferLimitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transferLimitButtonActionPerformed(evt);
            }
        });
        Card.add(transferLimitButton);
        transferLimitButton.setBounds(320, 100, 40, 30);

        transferLimit.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        transferLimit.setForeground(new java.awt.Color(75, 79, 104));
        transferLimit.setText("Adjust your card's transfer limit ");
        Card.add(transferLimit);
        transferLimit.setBounds(130, 110, 190, 18);

        userTypes.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        userTypes.setForeground(new java.awt.Color(153, 153, 153));
        userTypes.setName(""); // NOI18N
        setUserTypes();
        Card.add(userTypes);
        userTypes.setBounds(130, 80, 180, 20);

        virtualCard.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        virtualCard.setLabel("Virtual Card");
        virtualCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                virtualCardActionPerformed(evt);
            }
        });
        Card.add(virtualCard);
        virtualCard.setBounds(390, 20, 120, 24);

        userIDLabel.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        userIDLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        userIDLabel.setText("userID");
        Card.add(userIDLabel);
        userIDLabel.setBounds(130, 50, 130, 20);

        panelMouseEffect.add(Card);
        Card.setBounds(460, 130, 550, 190);

        btn_aichatsupport.setBackground(new java.awt.Color(58, 68, 75));
        btn_aichatsupport.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        btn_aichatsupport.setForeground(new java.awt.Color(255, 255, 255));
        btn_aichatsupport.setText("Need Help?");
        btn_aichatsupport.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_aichatsupport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_aichatsupportActionPerformed(evt);
            }
        });
        panelMouseEffect.add(btn_aichatsupport);
        btn_aichatsupport.setBounds(870, 450, 140, 40);

        btn_todayAnnouncement.setBackground(new java.awt.Color(58, 68, 75));
        btn_todayAnnouncement.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        btn_todayAnnouncement.setForeground(new java.awt.Color(255, 255, 255));
        btn_todayAnnouncement.setText("See Today's Announcement");
        btn_todayAnnouncement.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_todayAnnouncement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_todayAnnouncementActionPerformed(evt);
            }
        });
        panelMouseEffect.add(btn_todayAnnouncement);
        btn_todayAnnouncement.setBounds(460, 430, 350, 60);

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/home.jpg"))); // NOI18N
        background.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        background.setMaximumSize(new java.awt.Dimension(1070, 600));
        background.setMinimumSize(new java.awt.Dimension(1070, 600));
        background.setName(""); // NOI18N
        background.setPreferredSize(new java.awt.Dimension(1070, 600));
        panelMouseEffect.add(background);
        background.setBounds(0, 0, 1070, 600);

        getContentPane().add(panelMouseEffect);
        panelMouseEffect.setBounds(0, 0, 1070, 600);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void HomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HomeActionPerformed

    /**
     * Action performed when the Profile button is clicked
     *
     * @param evt The action event
     */
    private void ProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProfileActionPerformed
        double galleonMoneyDouble = Double.parseDouble(galleonMoney.getText());// Get galleon balance as a double
        UserTypes<Double> userTypeDeterminer = new UserTypes<>(loggedInUserID, galleonMoneyDouble, user);// Determine user type
        String userType = userTypeDeterminer.getUserType();// Get the user type
        if (userType.equals("Goblin")) {
            // If user type is Goblin, open AdminProfile
            AdminProfile adminProfile = new AdminProfile(user);
            adminProfile.setUser();
            adminProfile.setVisible(true);
            adminProfile.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            this.dispose(); // Close the current window    
        } else {
            // If user type is not Goblin, open UserProfile
            UserProfile userProfile = new UserProfile(user);
            userProfile.setUserType(userType);
            userProfile.setUser();
            userProfile.setVisible(true);
            userProfile.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            this.dispose();
        }
    }//GEN-LAST:event_ProfileActionPerformed

    /**
     * Action performed when the Transfer button is clicked
     *
     * @param evt The action event
     */
    private void transferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transferActionPerformed
        Search search = new Search(user);// Open the Search page
        search.setVisible(true);
        search.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_transferActionPerformed

    /**
     * Action performed when the Transfer Limit button is clicked
     *
     * @param evt The action event
     */
    private void transferLimitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transferLimitButtonActionPerformed
        TransferLimit transferLimitPage = new TransferLimit(user);// Open the TransferLimit page
        transferLimitPage.setVisible(true);
        transferLimitPage.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_transferLimitButtonActionPerformed

    /**
     * Action performed when the Virtual Card button is clicked
     *
     * @param evt The action event
     */
    private void virtualCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_virtualCardActionPerformed
        CardFront cardFront = new CardFront(user);// Open the CardFront page
        cardFront.setVisible(true);
        cardFront.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_virtualCardActionPerformed

    /**
     * Action performed when the Sign Out button is clicked
     *
     * @param evt The action event
     */
    private void signOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signOutActionPerformed
        JOptionPane.showMessageDialog(null, "You have securely logged out of Egringotts.");
        FirstPage firstPage = new FirstPage();// Open the FirstPage
        firstPage.setVisible(true);
        firstPage.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_signOutActionPerformed

    /**
     * Action performed when the Today's Announcement button is clicked
     *
     * @param evt The action event
     */
    private void btn_todayAnnouncementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_todayAnnouncementActionPerformed
        TodayAnnouncement todayAnnouncement = new TodayAnnouncement(user);// Open the TodayAnnouncement page
        todayAnnouncement.setVisible(true);
        todayAnnouncement.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_btn_todayAnnouncementActionPerformed

    /**
     * Action performed when the Exchange button is clicked
     *
     * @param evt The action event
     */
    private void exchangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exchangeActionPerformed
        ExchangePage exchange = new ExchangePage(user);// Open the ExchangePage
        exchange.setVisible(true);
        exchange.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_exchangeActionPerformed

    /**
     * Action performed when the Show Currency button is clicked
     *
     * @param evt The action event
     */
    private void btn_showCurrencyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_showCurrencyActionPerformed
        ShowAccountBalance accountBalance = new ShowAccountBalance(user);// Open the ShowAccountBalance page
        accountBalance.setUserId();
        accountBalance.setVisible(true);
        accountBalance.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_btn_showCurrencyActionPerformed

    /**
     * Action performed when the History button is clicked
     *
     * @param evt The action event
     */
    private void historyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_historyActionPerformed
        PensievePast history = new PensievePast(user);// Open the PensievePast page
        history.setVisible(true);
        history.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_historyActionPerformed

    /**
     * Action performed when the AI Chat Support button is clicked
     *
     * @param evt The action event
     */
    private void btn_aichatsupportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_aichatsupportActionPerformed
        OwlPostHelp chat = new OwlPostHelp(user);// Open the OwlPostHelp page
        chat.setVisible(true);
        chat.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_btn_aichatsupportActionPerformed

    /**
     * Sets the user types based on the current user's galleon balance
     */
    public void setUserTypes() {
        if (this.loggedInUserID != null) {
            double galleonMoneyDouble = Double.parseDouble(galleonMoney.getText());// Get galleon balance as a double
            UserTypes<Double> userTypeDeterminer = new UserTypes<>(this.loggedInUserID, galleonMoneyDouble, user);// Determine user type
            String userType = userTypeDeterminer.getUserType();// Get the user type
            userTypes.setText(userType);// Set the user type label
            user.setUser(userTypeDeterminer);// Update the user account with the new user type
        } else {
            System.out.println("Please wait for the userID to be parse in....");
        }
    }

    /**
     * Sets the user information on the home page
     */
    public void setUser() {
        this.loggedInUserID = user.getUserID(); // Set the logged-in user ID      
        nameOfUser.setText(user.getUsername());// Set the user's name
        userIDLabel.setText(user.getUserID());// Set the user ID label
        cardNumber.setText(user.getDebitCard().getCardNum());// Set the card number

        if (user.getUserAvatar() != null && user.getUserAvatar().getImagePath() != null && !user.getUserAvatar().getImagePath().trim().equals("/Images/profilePic.jpg")) {
            this.imagePathString = user.getUserAvatar().getImagePath(); // Set the image path
            profilePic.setIcon(new javax.swing.ImageIcon(this.imagePathString));// Set the profile picture

        } else {
            System.out.println("Please wait for the image path to parse in....");
        }
    }

    /**
     * Updates the profile picture on the home page
     */
    public void updateProfilePicture() {
        if (user.getUserAvatar() != null && user.getUserAvatar().getImagePath() != null && !user.getUserAvatar().getImagePath().trim().equals("/Images/profilePic.jpg")) {
            this.imagePathString = user.getUserAvatar().getImagePath();// Set the image path
            profilePic.setIcon(new javax.swing.ImageIcon(this.imagePathString));// Set the profile picture

        } else {
            System.out.println("Something wrong about image path....");
        }
    }

    /**
     * Displays the user's balances on the home page
     *
     * @param userID The ID of the user
     */
    public void displayBalances(String userID) {
        try (Connection con = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/Egringotts", "root", "password")) {
            double galleonBal = getCurrentBalance(con, userID, "Galleon"); // Get galleon balance
            double knutBal = getCurrentBalance(con, userID, "Knut"); // Get knut balance
            double sickleBal = getCurrentBalance(con, userID, "Sickle"); // Get sickle balance

            galleonMoney.setText(String.format("%.2f", galleonBal)); // Display galleon balance
            knutMoney.setText(String.format("%.2f", knutBal)); // Display knut balance
            sickleMoney.setText(String.format("%.2f", sickleBal)); // Display sickle balance

        } catch (SQLException e) {
            System.out.println("Error: " + e.getMessage());
        }
    }

    /**
     * Retrieves the current balance for a specific user and currency from the
     * database.
     *
     * @param con The database connection to use.
     * @param userID The ID of the user whose balance is being queried.
     * @param currency The currency type for which the balance is being queried.
     * @return The balance amount for the specified user and currency. Returns
     * 0.0 if no balance is found.
     * @throws SQLException If there is an error while accessing the database.
     */
    private double getCurrentBalance(Connection con, String userID, String currency) throws SQLException {
        // SQL query to select the balance of the specified currency for the given user ID
        String query = "SELECT " + currency + " FROM UserBalance WHERE UserID = ?";
        // Use a try-with-resources statement to automatically close the PreparedStatement
        try (var statement = con.prepareStatement(query)) {
            statement.setString(1, userID);
            // Execute the query and obtain the result set
            try (var resultSet = statement.executeQuery()) {
                // If there is a result, return the balance amount
                if (resultSet.next()) {
                    return resultSet.getDouble(currency);
                }
            }
        }
        return 0.00; // Return 0 if balance not found
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserHomePage().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Card;
    private java.awt.Button Home;
    private java.awt.Button Profile;
    private javax.swing.JLabel balance;
    private javax.swing.JPanel bottom;
    private javax.swing.JButton btn_aichatsupport;
    private javax.swing.JButton btn_todayAnnouncement;
    private javax.swing.JLabel cardNumber;
    private javax.swing.JButton exchange;
    private javax.swing.JLabel galleon;
    private javax.swing.JLabel galleonMoney;
    private javax.swing.JButton history;
    private javax.swing.JLabel knut;
    private javax.swing.JLabel knutMoney;
    private javax.swing.JLabel logo;
    private java.awt.Label name;
    private javax.swing.JLabel nameOfUser;
    private Bank.PanelMouseEffect panelMouseEffect;
    private javax.swing.JLabel profilePic;
    private javax.swing.JLabel sickle;
    private javax.swing.JLabel sickleMoney;
    private java.awt.Button signOut;
    private javax.swing.JPanel top;
    private javax.swing.JPanel totalBalanceBackground;
    private javax.swing.JLabel transferLimit;
    private java.awt.Button transferLimitButton;
    private javax.swing.JLabel userIDLabel;
    private java.awt.Label userTypes;
    private java.awt.Button virtualCard;
    // End of variables declaration//GEN-END:variables
}
