/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Admin;

import Admin.AdminProfile;
import Bank.Account;
import Bank.Wand;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 * A class that allows editing announcements in a text file.
 */
public class EditAnnouncement extends javax.swing.JFrame {
    private Account user;
    
    /**
     * Creates new form EditAnnoucement
     */
    public EditAnnouncement() {
        setTitle("Edit Announcement");
        initComponents();
        displayAnnoucement();
    }
    
     /**
     * Creates new form EditAnnouncement for a specific user.
     * 
     * @param user The account object of the current user
     */
    public EditAnnouncement(Account user) {
        setTitle("Edit Announcement");
        this.user=user;
        initComponents();
        Wand.setCustomIcon(this);
        Wand.setCustomCursor(this);
        displayAnnoucement();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_EditAnnouncement = new javax.swing.JLabel();
        done = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextArea_announcement = new javax.swing.JTextArea();
        back = new javax.swing.JButton();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(600, 400));
        getContentPane().setLayout(null);

        lbl_EditAnnouncement.setFont(new java.awt.Font("Calibri", 1, 45)); // NOI18N
        lbl_EditAnnouncement.setForeground(new java.awt.Color(255, 255, 255));
        lbl_EditAnnouncement.setText("Edit Announcement");
        getContentPane().add(lbl_EditAnnouncement);
        lbl_EditAnnouncement.setBounds(30, 30, 390, 50);

        done.setText("Done");
        done.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        done.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneActionPerformed(evt);
            }
        });
        getContentPane().add(done);
        done.setBounds(490, 320, 80, 30);

        TextArea_announcement.setColumns(20);
        TextArea_announcement.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        TextArea_announcement.setRows(5);
        jScrollPane1.setViewportView(TextArea_announcement);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(30, 80, 520, 230);

        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        getContentPane().add(back);
        back.setBounds(390, 320, 80, 30);

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/announcement.jpg"))); // NOI18N
        getContentPane().add(background);
        background.setBounds(0, -130, 600, 600);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Displays the current announcement by reading from a file and setting the text in a text area.
     */
    private void displayAnnoucement(){
        BufferedReader bufferedReader=null;
        try {
            FileReader reader = new FileReader("announcement.txt");// Open the announcement file for reading
            bufferedReader= new BufferedReader(reader);// Create a buffered reader to read the file
            StringBuilder stringBuilder = new StringBuilder();// Use StringBuilder to accumulate lines
            String line;
            while ((line = bufferedReader.readLine()) != null) {// Read the file line by line
                stringBuilder.append(line).append("\n");// Append each line to the StringBuilder
            }
            TextArea_announcement.setText(stringBuilder.toString());// Set the text area with the accumulated text
            bufferedReader.close();
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            try {
                if (bufferedReader != null) {
                    bufferedReader.close();// Ensure the buffered reader is closed
                }
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }
    
    /**
     * Event handler for the "Done" button. Saves the edited announcement to a file and navigates to the admin profile.
     * 
     * @param evt The action event
     */
    private void doneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneActionPerformed
        String text = TextArea_announcement.getText();// Get the text from the text area
        
        try {
            FileWriter writer = new FileWriter("announcement.txt");// Open the announcement file for writing
            writer.write(text);// Write the text from the text area to the file
            writer.close();// Close the file writer
            JOptionPane.showMessageDialog(null, "Announcement edited successfully.");
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Error saving announcement: " + ex.getMessage());
        }

        AdminProfile adminprofile = new AdminProfile(user);//parse the data to AdminProfile class
        adminprofile.setUser();// Set the user for the admin profile
        adminprofile.setUserType("Goblin");
        adminprofile.setVisible(true);
        adminprofile.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_doneActionPerformed

    /**
     * Event handler for the "Back" button. Navigates to the admin profile without saving changes.
     * 
     * @param evt The action event
     */
    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        //parse the data to AdminProfile class
        AdminProfile adminProfile=new AdminProfile(user);
        adminProfile.setUser(); // Set the user for the admin profile
        adminProfile.setUserType("Goblin");
        adminProfile.setVisible(true);
        adminProfile.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_backActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditAnnouncement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditAnnouncement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditAnnouncement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditAnnouncement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditAnnouncement().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea TextArea_announcement;
    private javax.swing.JButton back;
    private javax.swing.JLabel background;
    private javax.swing.JButton done;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_EditAnnouncement;
    // End of variables declaration//GEN-END:variables
}
